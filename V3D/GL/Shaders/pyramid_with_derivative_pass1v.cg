#ifndef PRESMOOTHING
#define PRESMOOTHING 0
#endif

void main(uniform sampler2D src_tex : TEXUNIT0,
                            float4 st0 : TEXCOORD0,
                            float4 st1 : TEXCOORD1,
                            float4 st2 : TEXCOORD2,
                            float4 st3 : TEXCOORD3,
                        out float4 color : COLOR)
{
#if PRESMOOTHING==3
   // This is the (odd) binomial kernel [0 1 6 15 20 15 6 1 0]
   float4 const f1 = float4(0, 1, 6, 15) / 64.0f;
   float4 const f2 = float4(20, 15, 6, 1) / 64.0f;

   float4 const df = float4(1, 6, 14, 14) / 128.0f;

   float2 ds = st0.zw - st0.xy;

   float4 g1, g2;
   float  g3;
   g1.x = tex2D(src_tex, st0.xy - ds).x;
   g1.y = tex2D(src_tex, st0.xy).x;
   g1.z = tex2D(src_tex, st0.zw).x;
   g1.w = tex2D(src_tex, st1.xy).x;
   g2.x = tex2D(src_tex, st1.zw).x;
   g2.y = tex2D(src_tex, st2.xy).x;
   g2.z = tex2D(src_tex, st2.zw).x;
   g2.w = tex2D(src_tex, st3.xy).x;
   g3   = tex2D(src_tex, st3.zw).x;

   g1 *= 255.0f;
   g2 *= 255.0f;
   g3 *= 255.0f;

   float v = dot(f1, g1) + dot(f2, g2);
   float dv = -dot(df, g1) + dot(df, float4(g2.yzw, g3));
#elif PRESMOOTHING==2
   // This is the (odd) binomial kernel [0 1 4 6 4 1 0]
   float4 const f1 = float4(0, 1, 4, 6) / 16.0f;
   float3 const f2 = float3(4, 1, 0) / 16.0f;

   float4 const df1 = float4(-1, -4, -5, 0) / 32.0f;
   float3 const df2 = float3(5, 4, 1) / 32.0f;

   float4 g1;
   float3 g2;

   g1.x = tex2D(src_tex, st0.xy).x;
   g1.y = tex2D(src_tex, st0.zw).x;
   g1.z = tex2D(src_tex, st1.xy).x;
   g1.w = tex2D(src_tex, st1.zw).x;
   g2.x = tex2D(src_tex, st2.xy).x;
   g2.y = tex2D(src_tex, st2.zw).x;
   g2.z = tex2D(src_tex, st3.xy).x;

   g1 *= 255.0f;
   g2 *= 255.0f;

   float v = dot(f1, g1) + dot(f2, g2);
   float dv = dot(df1, g1) + dot(df2, g2);
#elif PRESMOOTHING==1
   // This is the (odd) binomial kernel [0 1 2 1 0]
   float4 const f1 = float4(0, 1, 2, 1) / 4.0f;

   float4 const df1 = float4(-1, -2, 0, 2) / 8.0f;
   float  const df2 = 1.0 / 8.0f;

   float4 g1;
   float  g2;

   g1.x = tex2D(src_tex, st0.zw);
   g1.y = tex2D(src_tex, st1.xy);
   g1.z = tex2D(src_tex, st1.zw);
   g1.w = tex2D(src_tex, st2.xy);
   g2   = tex2D(src_tex, st2.zw);

   g1 *= 255.0f;
   g2 *= 255.0f;

   float v = dot(f1, g1);
   float dv = dot(df1, g1) + df2*g2;
#elif PRESMOOTHING==4
   // This is the (odd) kernel [0 1 6 1 0]
   float4 const f1 = float4(0, 1, 6, 1) / 8.0f;

   float4 const df1 = float4(-1, -6, 0, 6) / 16.0f;
   float  const df2 = 1.0 / 16.0f;

   float4 g1;
   float  g2;

   g1.x = tex2D(src_tex, st0.zw);
   g1.y = tex2D(src_tex, st1.xy);
   g1.z = tex2D(src_tex, st1.zw);
   g1.w = tex2D(src_tex, st2.xy);
   g2   = tex2D(src_tex, st2.zw);

   g1 *= 255.0f;
   g2 *= 255.0f;

   float v = dot(f1, g1);
   float dv = dot(df1, g1) + df2*g2;
#else
   // This is the (odd and degenerate) binomial kernel [0 0 1 0 0]
   float4 const f1 = float4(0, 0, 1, 0);

   float4 const df1 = float4(0, -1, 0, 1) / 2.0f;

   float4 g1;

   g1.x = 0;
   g1.y = tex2D(src_tex, st1.xy);
   g1.z = tex2D(src_tex, st1.zw);
   g1.w = tex2D(src_tex, st2.xy);

   g1 *= 255.0f;

   float v = dot(f1, g1);
   float dv = dot(df1, g1);
#endif

   color.xy = unpack_2half(v);
   color.zw = unpack_2half(dv);
}
